// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/priscila-albertini-da-silva/item-detail-ml/internal/domain"
	delivery "github.com/priscila-albertini-da-silva/item-detail-ml/internal/handler/delivery"

	mock "github.com/stretchr/testify/mock"
)

// ProductDetailResponseFactory is an autogenerated mock type for the ProductDetailResponseFactory type
type ProductDetailResponseFactory struct {
	mock.Mock
}

// ToProductDetailResponse provides a mock function with given fields: p, pm
func (_m *ProductDetailResponseFactory) ToProductDetailResponse(p domain.ProductItem, pm []domain.PaymentMethod) *delivery.ProductDetailResponse {
	ret := _m.Called(p, pm)

	if len(ret) == 0 {
		panic("no return value specified for ToProductDetailResponse")
	}

	var r0 *delivery.ProductDetailResponse
	if rf, ok := ret.Get(0).(func(domain.ProductItem, []domain.PaymentMethod) *delivery.ProductDetailResponse); ok {
		r0 = rf(p, pm)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*delivery.ProductDetailResponse)
		}
	}

	return r0
}

// NewProductDetailResponseFactory creates a new instance of ProductDetailResponseFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProductDetailResponseFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProductDetailResponseFactory {
	mock := &ProductDetailResponseFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
